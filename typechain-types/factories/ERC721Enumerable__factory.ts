/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  ERC721Enumerable,
  ERC721EnumerableInterface,
} from "../ERC721Enumerable";

const _abi = [
  {
    inputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    constant: false,
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: true,
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: true,
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "tokenByIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "tokenOfOwnerByIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061002a6301ffc9a760e01b6001600160e01b0361006116565b6100436380ac58cd60e01b6001600160e01b0361006116565b61005c63780e9d6360e01b6001600160e01b0361006116565b6100e5565b6001600160e01b031980821614156100c0576040805162461bcd60e51b815260206004820152601c60248201527f4552433136353a20696e76616c696420696e7465726661636520696400000000604482015290519081900360640190fd5b6001600160e01b0319166000908152602081905260409020805460ff19166001179055565b611402806100f46000396000f3fe608060405234801561001057600080fd5b50600436106100df5760003560e01c806342842e0e1161008c57806370a082311161006657806370a082311461028a578063a22cb465146102b0578063b88d4fde146102de578063e985e9c5146103a4576100df565b806342842e0e1461021a5780634f6ccce7146102505780636352211e1461026d576100df565b806318160ddd116100bd57806318160ddd1461019e57806323b872dd146101b85780632f745c59146101ee576100df565b806301ffc9a7146100e4578063081812fc14610137578063095ea7b314610170575b600080fd5b610123600480360360208110156100fa57600080fd5b50357fffffffff00000000000000000000000000000000000000000000000000000000166103d2565b604080519115158252519081900360200190f35b6101546004803603602081101561014d57600080fd5b5035610409565b604080516001600160a01b039092168252519081900360200190f35b61019c6004803603604081101561018657600080fd5b506001600160a01b03813516906020013561046b565b005b6101a66105a0565b60408051918252519081900360200190f35b61019c600480360360608110156101ce57600080fd5b506001600160a01b038135811691602081013590911690604001356105a7565b6101a66004803603604081101561020457600080fd5b506001600160a01b038135169060200135610603565b61019c6004803603606081101561023057600080fd5b506001600160a01b03813581169160208101359091169060400135610682565b6101a66004803603602081101561026657600080fd5b503561069d565b6101546004803603602081101561028357600080fd5b5035610703565b6101a6600480360360208110156102a057600080fd5b50356001600160a01b031661075d565b61019c600480360360408110156102c657600080fd5b506001600160a01b03813516906020013515156107c5565b61019c600480360360808110156102f457600080fd5b6001600160a01b0382358116926020810135909116916040820135919081019060808101606082013564010000000081111561032f57600080fd5b82018360208201111561034157600080fd5b8035906020019184600183028401116401000000008311171561036357600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295506108e8945050505050565b610123600480360360408110156103ba57600080fd5b506001600160a01b0381358116916020013516610946565b7fffffffff000000000000000000000000000000000000000000000000000000001660009081526020819052604090205460ff1690565b600061041482610974565b61044f5760405162461bcd60e51b815260040180806020018281038252602c8152602001806112fb602c913960400191505060405180910390fd5b506000908152600260205260409020546001600160a01b031690565b600061047682610703565b9050806001600160a01b0316836001600160a01b031614156104c95760405162461bcd60e51b81526004018080602001828103825260218152602001806113506021913960400191505060405180910390fd5b806001600160a01b03166104db610991565b6001600160a01b031614806104fc57506104fc816104f7610991565b610946565b6105375760405162461bcd60e51b81526004018080602001828103825260388152602001806112706038913960400191505060405180910390fd5b600082815260026020526040808220805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0387811691821790925591518593918516917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591a4505050565b6007545b90565b6105b86105b2610991565b82610995565b6105f35760405162461bcd60e51b81526004018080602001828103825260318152602001806113716031913960400191505060405180910390fd5b6105fe838383610a39565b505050565b600061060e8361075d565b821061064b5760405162461bcd60e51b815260040180806020018281038252602b8152602001806111c3602b913960400191505060405180910390fd5b6001600160a01b038316600090815260056020526040902080548390811061066f57fe5b9060005260206000200154905092915050565b6105fe838383604051806020016040528060008152506108e8565b60006106a76105a0565b82106106e45760405162461bcd60e51b815260040180806020018281038252602c8152602001806113a2602c913960400191505060405180910390fd5b600782815481106106f157fe5b90600052602060002001549050919050565b6000818152600160205260408120546001600160a01b0316806107575760405162461bcd60e51b81526004018080602001828103825260298152602001806112d26029913960400191505060405180910390fd5b92915050565b60006001600160a01b0382166107a45760405162461bcd60e51b815260040180806020018281038252602a8152602001806112a8602a913960400191505060405180910390fd5b6001600160a01b038216600090815260036020526040902061075790610a58565b6107cd610991565b6001600160a01b0316826001600160a01b03161415610833576040805162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c657200000000000000604482015290519081900360640190fd5b8060046000610840610991565b6001600160a01b0390811682526020808301939093526040918201600090812091871680825291909352912080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0016921515929092179091556108a2610991565b60408051841515815290516001600160a01b0392909216917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c319181900360200190a35050565b6108f96108f3610991565b83610995565b6109345760405162461bcd60e51b81526004018080602001828103825260318152602001806113716031913960400191505060405180910390fd5b61094084848484610a5c565b50505050565b6001600160a01b03918216600090815260046020908152604080832093909416825291909152205460ff1690565b6000908152600160205260409020546001600160a01b0316151590565b3390565b60006109a082610974565b6109db5760405162461bcd60e51b815260040180806020018281038252602c815260200180611244602c913960400191505060405180910390fd5b60006109e683610703565b9050806001600160a01b0316846001600160a01b03161480610a215750836001600160a01b0316610a1684610409565b6001600160a01b0316145b80610a315750610a318185610946565b949350505050565b610a44838383610aae565b610a4e8382610bff565b6105fe8282610d12565b5490565b610a67848484610a39565b610a7384848484610d50565b6109405760405162461bcd60e51b81526004018080602001828103825260328152602001806111ee6032913960400191505060405180910390fd5b826001600160a01b0316610ac182610703565b6001600160a01b031614610b065760405162461bcd60e51b81526004018080602001828103825260298152602001806113276029913960400191505060405180910390fd5b6001600160a01b038216610b4b5760405162461bcd60e51b81526004018080602001828103825260248152602001806112206024913960400191505060405180910390fd5b610b5481611002565b6001600160a01b0383166000908152600360205260409020610b759061104c565b6001600160a01b0382166000908152600360205260409020610b9690611063565b600081815260016020526040808220805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b6001600160a01b038216600090815260056020526040812054610c2990600163ffffffff61106c16565b600083815260066020526040902054909150808214610cc4576001600160a01b0384166000908152600560205260408120805484908110610c6657fe5b906000526020600020015490508060056000876001600160a01b03166001600160a01b031681526020019081526020016000208381548110610ca457fe5b600091825260208083209091019290925591825260069052604090208190555b6001600160a01b0384166000908152600560205260409020805490610d0b907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8301611185565b5050505050565b6001600160a01b0390911660009081526005602081815260408084208054868652600684529185208290559282526001810183559183529091200155565b6000610d64846001600160a01b03166110b5565b610d7057506001610a31565b600060606001600160a01b0386167f150b7a0200000000000000000000000000000000000000000000000000000000610da7610991565b89888860405160240180856001600160a01b03166001600160a01b03168152602001846001600160a01b03166001600160a01b0316815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b83811015610e20578181015183820152602001610e08565b50505050905090810190601f168015610e4d5780820380516001836020036101000a031916815260200191505b5060408051601f198184030181529181526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff00000000000000000000000000000000000000000000000000000000909a16999099178952518151919890975087965094509250829150849050835b60208310610ee25780518252601f199092019160209182019101610ec3565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d8060008114610f44576040519150601f19603f3d011682016040523d82523d6000602084013e610f49565b606091505b509150915081610f9a57805115610f635780518082602001fd5b60405162461bcd60e51b81526004018080602001828103825260328152602001806111ee6032913960400191505060405180910390fd5b6000818060200190516020811015610fb157600080fd5b50517fffffffff00000000000000000000000000000000000000000000000000000000167f150b7a0200000000000000000000000000000000000000000000000000000000149350610a3192505050565b6000818152600260205260409020546001600160a01b031615611049576000818152600260205260409020805473ffffffffffffffffffffffffffffffffffffffff191690555b50565b805461105f90600163ffffffff61106c16565b9055565b80546001019055565b60006110ae83836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f7700008152506110ee565b9392505050565b6000813f7fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470818114801590610a31575050151592915050565b6000818484111561117d5760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561114257818101518382015260200161112a565b50505050905090810190601f16801561116f5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b8154818355818111156105fe576000838152602090206105fe9181019083016105a491905b808211156111be57600081556001016111aa565b509056fe455243373231456e756d657261626c653a206f776e657220696e646578206f7574206f6620626f756e64734552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e7465724552433732313a207472616e7366657220746f20746865207a65726f20616464726573734552433732313a206f70657261746f7220717565727920666f72206e6f6e6578697374656e7420746f6b656e4552433732313a20617070726f76652063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f76656420666f7220616c6c4552433732313a2062616c616e636520717565727920666f7220746865207a65726f20616464726573734552433732313a206f776e657220717565727920666f72206e6f6e6578697374656e7420746f6b656e4552433732313a20617070726f76656420717565727920666f72206e6f6e6578697374656e7420746f6b656e4552433732313a207472616e73666572206f6620746f6b656e2074686174206973206e6f74206f776e4552433732313a20617070726f76616c20746f2063757272656e74206f776e65724552433732313a207472616e736665722063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564455243373231456e756d657261626c653a20676c6f62616c20696e646578206f7574206f6620626f756e6473a265627a7a723158203c972dd03dd4115804d76475ecf8ab70780031a84e650a2caf22e547261006ae64736f6c63430005110032";

type ERC721EnumerableConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC721EnumerableConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC721Enumerable__factory extends ContractFactory {
  constructor(...args: ERC721EnumerableConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "ERC721Enumerable";
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ERC721Enumerable> {
    return super.deploy(overrides || {}) as Promise<ERC721Enumerable>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): ERC721Enumerable {
    return super.attach(address) as ERC721Enumerable;
  }
  connect(signer: Signer): ERC721Enumerable__factory {
    return super.connect(signer) as ERC721Enumerable__factory;
  }
  static readonly contractName: "ERC721Enumerable";
  public readonly contractName: "ERC721Enumerable";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC721EnumerableInterface {
    return new utils.Interface(_abi) as ERC721EnumerableInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC721Enumerable {
    return new Contract(address, _abi, signerOrProvider) as ERC721Enumerable;
  }
}
