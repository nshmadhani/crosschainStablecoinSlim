/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { ERC721, ERC721Interface } from "../ERC721";

const _abi = [
  {
    inputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    constant: false,
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: true,
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: true,
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061002a6301ffc9a760e01b6001600160e01b0361004816565b6100436380ac58cd60e01b6001600160e01b0361004816565b6100cc565b6001600160e01b031980821614156100a7576040805162461bcd60e51b815260206004820152601c60248201527f4552433136353a20696e76616c696420696e7465726661636520696400000000604482015290519081900360640190fd5b6001600160e01b0319166000908152602081905260409020805460ff19166001179055565b6110a0806100db6000396000f3fe608060405234801561001057600080fd5b50600436106100be5760003560e01c80636352211e11610076578063a22cb4651161005b578063a22cb4651461023e578063b88d4fde1461026c578063e985e9c514610332576100be565b80636352211e146101e957806370a0823114610206576100be565b8063095ea7b3116100a7578063095ea7b31461014f57806323b872dd1461017d57806342842e0e146101b3576100be565b806301ffc9a7146100c3578063081812fc14610116575b600080fd5b610102600480360360208110156100d957600080fd5b50357fffffffff0000000000000000000000000000000000000000000000000000000016610360565b604080519115158252519081900360200190f35b6101336004803603602081101561012c57600080fd5b5035610397565b604080516001600160a01b039092168252519081900360200190f35b61017b6004803603604081101561016557600080fd5b506001600160a01b0381351690602001356103f9565b005b61017b6004803603606081101561019357600080fd5b506001600160a01b0381358116916020810135909116906040013561052e565b61017b600480360360608110156101c957600080fd5b506001600160a01b0381358116916020810135909116906040013561058a565b610133600480360360208110156101ff57600080fd5b50356105a5565b61022c6004803603602081101561021c57600080fd5b50356001600160a01b03166105ff565b60408051918252519081900360200190f35b61017b6004803603604081101561025457600080fd5b506001600160a01b0381351690602001351515610667565b61017b6004803603608081101561028257600080fd5b6001600160a01b038235811692602081013590911691604082013591908101906080810160608201356401000000008111156102bd57600080fd5b8201836020820111156102cf57600080fd5b803590602001918460018302840111640100000000831117156102f157600080fd5b91908080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525092955061078a945050505050565b6101026004803603604081101561034857600080fd5b506001600160a01b03813581169160200135166107e8565b7fffffffff000000000000000000000000000000000000000000000000000000001660009081526020819052604090205460ff1690565b60006103a282610816565b6103dd5760405162461bcd60e51b815260040180806020018281038252602c815260200180610fc5602c913960400191505060405180910390fd5b506000908152600260205260409020546001600160a01b031690565b6000610404826105a5565b9050806001600160a01b0316836001600160a01b031614156104575760405162461bcd60e51b815260040180806020018281038252602181526020018061101a6021913960400191505060405180910390fd5b806001600160a01b0316610469610833565b6001600160a01b0316148061048a575061048a81610485610833565b6107e8565b6104c55760405162461bcd60e51b8152600401808060200182810382526038815260200180610f3a6038913960400191505060405180910390fd5b600082815260026020526040808220805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0387811691821790925591518593918516917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591a4505050565b61053f610539610833565b82610837565b61057a5760405162461bcd60e51b815260040180806020018281038252603181526020018061103b6031913960400191505060405180910390fd5b6105858383836108db565b505050565b6105858383836040518060200160405280600081525061078a565b6000818152600160205260408120546001600160a01b0316806105f95760405162461bcd60e51b8152600401808060200182810382526029815260200180610f9c6029913960400191505060405180910390fd5b92915050565b60006001600160a01b0382166106465760405162461bcd60e51b815260040180806020018281038252602a815260200180610f72602a913960400191505060405180910390fd5b6001600160a01b03821660009081526003602052604090206105f990610a2c565b61066f610833565b6001600160a01b0316826001600160a01b031614156106d5576040805162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c657200000000000000604482015290519081900360640190fd5b80600460006106e2610833565b6001600160a01b0390811682526020808301939093526040918201600090812091871680825291909352912080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001692151592909217909155610744610833565b60408051841515815290516001600160a01b0392909216917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c319181900360200190a35050565b61079b610795610833565b83610837565b6107d65760405162461bcd60e51b815260040180806020018281038252603181526020018061103b6031913960400191505060405180910390fd5b6107e284848484610a30565b50505050565b6001600160a01b03918216600090815260046020908152604080832093909416825291909152205460ff1690565b6000908152600160205260409020546001600160a01b0316151590565b3390565b600061084282610816565b61087d5760405162461bcd60e51b815260040180806020018281038252602c815260200180610f0e602c913960400191505060405180910390fd5b6000610888836105a5565b9050806001600160a01b0316846001600160a01b031614806108c35750836001600160a01b03166108b884610397565b6001600160a01b0316145b806108d357506108d381856107e8565b949350505050565b826001600160a01b03166108ee826105a5565b6001600160a01b0316146109335760405162461bcd60e51b8152600401808060200182810382526029815260200180610ff16029913960400191505060405180910390fd5b6001600160a01b0382166109785760405162461bcd60e51b8152600401808060200182810382526024815260200180610eea6024913960400191505060405180910390fd5b61098181610a82565b6001600160a01b03831660009081526003602052604090206109a290610acc565b6001600160a01b03821660009081526003602052604090206109c390610ae3565b600081815260016020526040808220805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b5490565b610a3b8484846108db565b610a4784848484610aec565b6107e25760405162461bcd60e51b8152600401808060200182810382526032815260200180610eb86032913960400191505060405180910390fd5b6000818152600260205260409020546001600160a01b031615610ac9576000818152600260205260409020805473ffffffffffffffffffffffffffffffffffffffff191690555b50565b8054610adf90600163ffffffff610d9e16565b9055565b80546001019055565b6000610b00846001600160a01b0316610de7565b610b0c575060016108d3565b600060606001600160a01b0386167f150b7a0200000000000000000000000000000000000000000000000000000000610b43610833565b89888860405160240180856001600160a01b03166001600160a01b03168152602001846001600160a01b03166001600160a01b0316815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b83811015610bbc578181015183820152602001610ba4565b50505050905090810190601f168015610be95780820380516001836020036101000a031916815260200191505b5060408051601f198184030181529181526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff00000000000000000000000000000000000000000000000000000000909a16999099178952518151919890975087965094509250829150849050835b60208310610c7e5780518252601f199092019160209182019101610c5f565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d8060008114610ce0576040519150601f19603f3d011682016040523d82523d6000602084013e610ce5565b606091505b509150915081610d3657805115610cff5780518082602001fd5b60405162461bcd60e51b8152600401808060200182810382526032815260200180610eb86032913960400191505060405180910390fd5b6000818060200190516020811015610d4d57600080fd5b50517fffffffff00000000000000000000000000000000000000000000000000000000167f150b7a02000000000000000000000000000000000000000000000000000000001493506108d392505050565b6000610de083836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250610e20565b9392505050565b6000813f7fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a4708181148015906108d3575050151592915050565b60008184841115610eaf5760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b83811015610e74578181015183820152602001610e5c565b50505050905090810190601f168015610ea15780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b50505090039056fe4552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e7465724552433732313a207472616e7366657220746f20746865207a65726f20616464726573734552433732313a206f70657261746f7220717565727920666f72206e6f6e6578697374656e7420746f6b656e4552433732313a20617070726f76652063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f76656420666f7220616c6c4552433732313a2062616c616e636520717565727920666f7220746865207a65726f20616464726573734552433732313a206f776e657220717565727920666f72206e6f6e6578697374656e7420746f6b656e4552433732313a20617070726f76656420717565727920666f72206e6f6e6578697374656e7420746f6b656e4552433732313a207472616e73666572206f6620746f6b656e2074686174206973206e6f74206f776e4552433732313a20617070726f76616c20746f2063757272656e74206f776e65724552433732313a207472616e736665722063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564a265627a7a723158206330eee0e763838cba801ea1ca66a587852a76ab5efe1c5d9d28b4d5dab7f2dd64736f6c63430005110032";

type ERC721ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC721ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC721__factory extends ContractFactory {
  constructor(...args: ERC721ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "ERC721";
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ERC721> {
    return super.deploy(overrides || {}) as Promise<ERC721>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): ERC721 {
    return super.attach(address) as ERC721;
  }
  connect(signer: Signer): ERC721__factory {
    return super.connect(signer) as ERC721__factory;
  }
  static readonly contractName: "ERC721";
  public readonly contractName: "ERC721";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC721Interface {
    return new utils.Interface(_abi) as ERC721Interface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): ERC721 {
    return new Contract(address, _abi, signerOrProvider) as ERC721;
  }
}
