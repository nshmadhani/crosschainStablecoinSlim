/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { VaultNFTv4, VaultNFTv4Interface } from "../VaultNFTv4";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol",
        type: "string",
      },
      {
        internalType: "string",
        name: "_uri",
        type: "string",
      },
    ],
    payable: false,
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    constant: false,
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: true,
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [],
    name: "baseURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: true,
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "tokenByIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "tokenOfOwnerByIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: true,
    inputs: [],
    name: "uri",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162001bc538038062001bc5833981810160405260608110156200003757600080fd5b81019080805160405193929190846401000000008211156200005857600080fd5b9083019060208201858111156200006e57600080fd5b82516401000000008111828201881017156200008957600080fd5b82525081516020918201929091019080838360005b83811015620000b85781810151838201526020016200009e565b50505050905090810190601f168015620000e65780820380516001836020036101000a031916815260200191505b50604052602001805160405193929190846401000000008211156200010a57600080fd5b9083019060208201858111156200012057600080fd5b82516401000000008111828201881017156200013b57600080fd5b82525081516020918201929091019080838360005b838110156200016a57818101518382015260200162000150565b50505050905090810190601f168015620001985780820380516001836020036101000a031916815260200191505b5060405260200180516040519392919084640100000000821115620001bc57600080fd5b908301906020820185811115620001d257600080fd5b8251640100000000811182820188101715620001ed57600080fd5b82525081516020918201929091019080838360005b838110156200021c57818101518382015260200162000202565b50505050905090810190601f1680156200024a5780820380516001836020036101000a031916815260200191505b50604052508491508390508181620002726301ffc9a760e01b6001600160e01b036200031216565b6200028d6380ac58cd60e01b6001600160e01b036200031216565b620002a863780e9d6360e01b6001600160e01b036200031216565b8151620002bd90600990602085019062000397565b508051620002d390600a90602084019062000397565b50620002ef635b5e139f60e01b6001600160e01b036200031216565b50508251620003089250600d9150602084019062000397565b505050506200043c565b6001600160e01b0319808216141562000372576040805162461bcd60e51b815260206004820152601c60248201527f4552433136353a20696e76616c696420696e7465726661636520696400000000604482015290519081900360640190fd5b6001600160e01b0319166000908152602081905260409020805460ff19166001179055565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10620003da57805160ff19168380011785556200040a565b828001600101855582156200040a579182015b828111156200040a578251825591602001919060010190620003ed565b50620004189291506200041c565b5090565b6200043991905b8082111562000418576000815560010162000423565b90565b611779806200044c6000396000f3fe608060405234801561001057600080fd5b50600436106101365760003560e01c80636352211e116100b2578063a22cb46511610081578063c87b56dd11610066578063c87b56dd14610488578063e985e9c5146104a5578063eac989f8146104d357610136565b8063a22cb46514610394578063b88d4fde146103c257610136565b80636352211e146103415780636c0360eb1461035e57806370a082311461036657806395d89b411461038c57610136565b806318160ddd116101095780632f745c59116100ee5780632f745c59146102c257806342842e0e146102ee5780634f6ccce71461032457610136565b806318160ddd1461027257806323b872dd1461028c57610136565b806301ffc9a71461013b57806306fdde031461018e578063081812fc1461020b578063095ea7b314610244575b600080fd5b61017a6004803603602081101561015157600080fd5b50357fffffffff00000000000000000000000000000000000000000000000000000000166104db565b604080519115158252519081900360200190f35b610196610512565b6040805160208082528351818301528351919283929083019185019080838360005b838110156101d05781810151838201526020016101b8565b50505050905090810190601f1680156101fd5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6102286004803603602081101561022157600080fd5b50356105a9565b604080516001600160a01b039092168252519081900360200190f35b6102706004803603604081101561025a57600080fd5b506001600160a01b03813516906020013561060b565b005b61027a610740565b60408051918252519081900360200190f35b610270600480360360608110156102a257600080fd5b506001600160a01b03813581169160208101359091169060400135610746565b61027a600480360360408110156102d857600080fd5b506001600160a01b0381351690602001356107a2565b6102706004803603606081101561030457600080fd5b506001600160a01b03813581169160208101359091169060400135610821565b61027a6004803603602081101561033a57600080fd5b503561083c565b6102286004803603602081101561035757600080fd5b50356108a2565b6101966108fc565b61027a6004803603602081101561037c57600080fd5b50356001600160a01b031661095d565b6101966109c5565b610270600480360360408110156103aa57600080fd5b506001600160a01b0381351690602001351515610a26565b610270600480360360808110156103d857600080fd5b6001600160a01b0382358116926020810135909116916040820135919081019060808101606082013564010000000081111561041357600080fd5b82018360208201111561042557600080fd5b8035906020019184600183028401116401000000008311171561044757600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550610b49945050505050565b6101966004803603602081101561049e57600080fd5b5035610ba7565b61017a600480360360408110156104bb57600080fd5b506001600160a01b0381358116916020013516610c4d565b610196610c7b565b7fffffffff000000000000000000000000000000000000000000000000000000001660009081526020819052604090205460ff1690565b60098054604080516020601f600260001961010060018816150201909516949094049384018190048102820181019092528281526060939092909183018282801561059e5780601f106105735761010080835404028352916020019161059e565b820191906000526020600020905b81548152906001019060200180831161058157829003601f168201915b505050505090505b90565b60006105b482610d09565b6105ef5760405162461bcd60e51b815260040180806020018281038252602c815260200180611672602c913960400191505060405180910390fd5b506000908152600260205260409020546001600160a01b031690565b6000610616826108a2565b9050806001600160a01b0316836001600160a01b031614156106695760405162461bcd60e51b81526004018080602001828103825260218152602001806116c76021913960400191505060405180910390fd5b806001600160a01b031661067b610d26565b6001600160a01b0316148061069c575061069c81610697610d26565b610c4d565b6106d75760405162461bcd60e51b81526004018080602001828103825260388152602001806115e76038913960400191505060405180910390fd5b600082815260026020526040808220805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0387811691821790925591518593918516917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591a4505050565b60075490565b610757610751610d26565b82610d2a565b6107925760405162461bcd60e51b81526004018080602001828103825260318152602001806116e86031913960400191505060405180910390fd5b61079d838383610dce565b505050565b60006107ad8361095d565b82106107ea5760405162461bcd60e51b815260040180806020018281038252602b81526020018061153a602b913960400191505060405180910390fd5b6001600160a01b038316600090815260056020526040902080548390811061080e57fe5b9060005260206000200154905092915050565b61079d83838360405180602001604052806000815250610b49565b6000610846610740565b82106108835760405162461bcd60e51b815260040180806020018281038252602c815260200180611719602c913960400191505060405180910390fd5b6007828154811061089057fe5b90600052602060002001549050919050565b6000818152600160205260408120546001600160a01b0316806108f65760405162461bcd60e51b81526004018080602001828103825260298152602001806116496029913960400191505060405180910390fd5b92915050565b600b8054604080516020601f600260001961010060018816150201909516949094049384018190048102820181019092528281526060939092909183018282801561059e5780601f106105735761010080835404028352916020019161059e565b60006001600160a01b0382166109a45760405162461bcd60e51b815260040180806020018281038252602a81526020018061161f602a913960400191505060405180910390fd5b6001600160a01b03821660009081526003602052604090206108f690610ded565b600a8054604080516020601f600260001961010060018816150201909516949094049384018190048102820181019092528281526060939092909183018282801561059e5780601f106105735761010080835404028352916020019161059e565b610a2e610d26565b6001600160a01b0316826001600160a01b03161415610a94576040805162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c657200000000000000604482015290519081900360640190fd5b8060046000610aa1610d26565b6001600160a01b0390811682526020808301939093526040918201600090812091871680825291909352912080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001692151592909217909155610b03610d26565b60408051841515815290516001600160a01b0392909216917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c319181900360200190a35050565b610b5a610b54610d26565b83610d2a565b610b955760405162461bcd60e51b81526004018080602001828103825260318152602001806116e86031913960400191505060405180910390fd5b610ba184848484610df1565b50505050565b6060610bb282610d09565b610bbb57600080fd5b600d805460408051602060026001851615610100026000190190941693909304601f81018490048402820184019092528181529291830182828015610c415780601f10610c1657610100808354040283529160200191610c41565b820191906000526020600020905b815481529060010190602001808311610c2457829003601f168201915b50505050509050919050565b6001600160a01b03918216600090815260046020908152604080832093909416825291909152205460ff1690565b600d805460408051602060026001851615610100026000190190941693909304601f81018490048402820184019092528181529291830182828015610d015780601f10610cd657610100808354040283529160200191610d01565b820191906000526020600020905b815481529060010190602001808311610ce457829003601f168201915b505050505081565b6000908152600160205260409020546001600160a01b0316151590565b3390565b6000610d3582610d09565b610d705760405162461bcd60e51b815260040180806020018281038252602c8152602001806115bb602c913960400191505060405180910390fd5b6000610d7b836108a2565b9050806001600160a01b0316846001600160a01b03161480610db65750836001600160a01b0316610dab846105a9565b6001600160a01b0316145b80610dc65750610dc68185610c4d565b949350505050565b610dd9838383610e43565b610de38382610f94565b61079d8282611089565b5490565b610dfc848484610dce565b610e08848484846110c7565b610ba15760405162461bcd60e51b81526004018080602001828103825260328152602001806115656032913960400191505060405180910390fd5b826001600160a01b0316610e56826108a2565b6001600160a01b031614610e9b5760405162461bcd60e51b815260040180806020018281038252602981526020018061169e6029913960400191505060405180910390fd5b6001600160a01b038216610ee05760405162461bcd60e51b81526004018080602001828103825260248152602001806115976024913960400191505060405180910390fd5b610ee981611379565b6001600160a01b0383166000908152600360205260409020610f0a906113c3565b6001600160a01b0382166000908152600360205260409020610f2b906113da565b600081815260016020526040808220805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b6001600160a01b038216600090815260056020526040812054610fbe90600163ffffffff6113e316565b600083815260066020526040902054909150808214611059576001600160a01b0384166000908152600560205260408120805484908110610ffb57fe5b906000526020600020015490508060056000876001600160a01b03166001600160a01b03168152602001908152602001600020838154811061103957fe5b600091825260208083209091019290925591825260069052604090208190555b6001600160a01b03841660009081526005602052604090208054906110829060001983016114fc565b5050505050565b6001600160a01b0390911660009081526005602081815260408084208054868652600684529185208290559282526001810183559183529091200155565b60006110db846001600160a01b031661142c565b6110e757506001610dc6565b600060606001600160a01b0386167f150b7a020000000000000000000000000000000000000000000000000000000061111e610d26565b89888860405160240180856001600160a01b03166001600160a01b03168152602001846001600160a01b03166001600160a01b0316815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b8381101561119757818101518382015260200161117f565b50505050905090810190601f1680156111c45780820380516001836020036101000a031916815260200191505b5060408051601f198184030181529181526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff00000000000000000000000000000000000000000000000000000000909a16999099178952518151919890975087965094509250829150849050835b602083106112595780518252601f19909201916020918201910161123a565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d80600081146112bb576040519150601f19603f3d011682016040523d82523d6000602084013e6112c0565b606091505b509150915081611311578051156112da5780518082602001fd5b60405162461bcd60e51b81526004018080602001828103825260328152602001806115656032913960400191505060405180910390fd5b600081806020019051602081101561132857600080fd5b50517fffffffff00000000000000000000000000000000000000000000000000000000167f150b7a0200000000000000000000000000000000000000000000000000000000149350610dc692505050565b6000818152600260205260409020546001600160a01b0316156113c0576000818152600260205260409020805473ffffffffffffffffffffffffffffffffffffffff191690555b50565b80546113d690600163ffffffff6113e316565b9055565b80546001019055565b600061142583836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250611465565b9392505050565b6000813f7fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470818114801590610dc6575050151592915050565b600081848411156114f45760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b838110156114b95781810151838201526020016114a1565b50505050905090810190601f1680156114e65780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b81548183558181111561079d5760008381526020902061079d9181019083016105a691905b808211156115355760008155600101611521565b509056fe455243373231456e756d657261626c653a206f776e657220696e646578206f7574206f6620626f756e64734552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e7465724552433732313a207472616e7366657220746f20746865207a65726f20616464726573734552433732313a206f70657261746f7220717565727920666f72206e6f6e6578697374656e7420746f6b656e4552433732313a20617070726f76652063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f76656420666f7220616c6c4552433732313a2062616c616e636520717565727920666f7220746865207a65726f20616464726573734552433732313a206f776e657220717565727920666f72206e6f6e6578697374656e7420746f6b656e4552433732313a20617070726f76656420717565727920666f72206e6f6e6578697374656e7420746f6b656e4552433732313a207472616e73666572206f6620746f6b656e2074686174206973206e6f74206f776e4552433732313a20617070726f76616c20746f2063757272656e74206f776e65724552433732313a207472616e736665722063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564455243373231456e756d657261626c653a20676c6f62616c20696e646578206f7574206f6620626f756e6473a265627a7a7231582006455c30aeb6bc26a005d3721c1e99c00ddd13f1c128cb3e2af1e1d21ae8ff2464736f6c63430005110032";

type VaultNFTv4ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: VaultNFTv4ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class VaultNFTv4__factory extends ContractFactory {
  constructor(...args: VaultNFTv4ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "VaultNFTv4";
  }

  deploy(
    name: string,
    symbol: string,
    _uri: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<VaultNFTv4> {
    return super.deploy(
      name,
      symbol,
      _uri,
      overrides || {}
    ) as Promise<VaultNFTv4>;
  }
  getDeployTransaction(
    name: string,
    symbol: string,
    _uri: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(name, symbol, _uri, overrides || {});
  }
  attach(address: string): VaultNFTv4 {
    return super.attach(address) as VaultNFTv4;
  }
  connect(signer: Signer): VaultNFTv4__factory {
    return super.connect(signer) as VaultNFTv4__factory;
  }
  static readonly contractName: "VaultNFTv4";
  public readonly contractName: "VaultNFTv4";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): VaultNFTv4Interface {
    return new utils.Interface(_abi) as VaultNFTv4Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): VaultNFTv4 {
    return new Contract(address, _abi, signerOrProvider) as VaultNFTv4;
  }
}
